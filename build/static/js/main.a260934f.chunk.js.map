{"version":3,"sources":["components/laps.js","components/timer.js","components/countdown.js","App.js","serviceWorker.js","index.js"],"names":["Laps","laps","feeds","length","map","val","index","key","className","starttime","duartion","endtime","reverse","Timer","state","adjustTimer","timerTime","mileseconds","Math","floor","slice","seconds","abs","minutes","hours","onClick","Countdown","timerOn","timerStart","exceed","startTimer","setState","timer","setInterval","newTime","clearInterval","stopTimer","resetTimer","localStorage","setItem","input","keyPressed","e","keyCode","lapstate","duration","durationval","startval","endval","push","mergeval","pop","prevProps","prevState","JSON","stringify","this","document","addEventListener","getItem","parse","type","disabled","for","Component","App","onKeyUp","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a260934f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Laps=({laps}) =>{\r\n    let feeds='';\r\n    if(laps.length>0){\r\n        feeds=laps.map((val,index)=>{\r\n            return (<li key={index} ><span className=\"lap\">Lap {index}</span><time>{val.starttime}</time> -- <time>{val.duartion}</time> -- <time>{val.endtime}</time></li>\r\n                \r\n            )\r\n        }).reverse();\r\n        return(\r\n            <ul className=\"laps\">\r\n            <li>\r\n                <span className=\"lap\"># Lap </span>\r\n                <span className=\"timetlt\">EndTime</span>\r\n                <span className=\"timetlt\">Duration</span>            \r\n                <span className=\"timetlt\">StartTime</span>\r\n            </li>\r\n            {feeds}\r\n            </ul>\r\n            \r\n        )\r\n    }else{\r\n         \r\n        return (\r\n            null\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Laps;","import React from 'react';\r\n\r\nconst Timer=({state,adjustTimer}) =>{\r\n    const { timerTime} = state;\r\n\r\n    let mileseconds = (\"00\" + Math.floor((timerTime/100 ) *100)).slice(-3);\r\n    let seconds = (\"-0\" + (Math.floor(Math.abs((timerTime / 1000) % 60) % 60))).slice(-2);\r\n    let minutes = (\"0\" + Math.floor(Math.abs((timerTime / 60000) % 60))).slice(-2);\r\n    let hours = (\"0\" + Math.floor(Math.abs((timerTime / 3600000) % 60))).slice(-2);\r\n\r\n    return(\r\n        <div className=\"Countdown-display\">\r\n          <button onClick={() => adjustTimer(\"incHours\")}>&#8679;</button>\r\n          <button onClick={() => adjustTimer(\"incMinutes\")}>\r\n            &#8679;\r\n          </button>\r\n          <button onClick={() => adjustTimer(\"incSeconds\")}>\r\n            &#8679;\r\n          </button>\r\n          <button onClick={() => adjustTimer(\"incMiSeconds\")}>\r\n            &#8679;\r\n          </button>\r\n\r\n          <div className=\"Countdown-time\">\r\n          <span className=\"minus\">{timerTime <0 ? '-':''}</span> {hours} : {minutes} : {seconds} : <small>{mileseconds}</small>\r\n            \r\n          </div>\r\n\r\n          <button onClick={() => adjustTimer(\"decHours\")}>&#8681;</button>\r\n          <button onClick={() => adjustTimer(\"decMinutes\")}>\r\n            &#8681;\r\n          </button>\r\n          <button onClick={() => adjustTimer(\"decSeconds\")}>\r\n            &#8681;\r\n          </button>\r\n          <button onClick={() => adjustTimer(\"decMiSeconds\")}>\r\n            &#8681;\r\n          </button>          \r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Timer;","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport Laps from './laps';\r\nimport Timer from './timer';\r\n\r\nclass Countdown extends Component {\r\n  state = {\r\n    timerOn: false,\r\n    timerStart: 0,\r\n    timerTime: 0,\r\n    laps:[],\r\n    exceed:false\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    localStorage.setItem(\"state\",JSON.stringify(this.state));\r\n  }\r\n\r\n  startTimer = () => {\r\n    this.setState({\r\n      timerOn: true,\r\n      timerTime: this.state.timerTime,\r\n      timerStart: this.state.timerTime\r\n    });\r\n    this.timer = setInterval(() => {\r\n      const newTime = this.state.timerTime - 10;\r\n      if(newTime < 0){\r\n        this.setState({\r\n          exceed:true\r\n        })\r\n      }else{\r\n        this.setState({\r\n          exceed:false\r\n        })\r\n      }\r\n      if (newTime >= 0 || this.state.exceed) {\r\n        this.setState({\r\n          timerTime: newTime\r\n        });\r\n      } else {\r\n        clearInterval(this.timer);\r\n        this.setState({ timerOn: false });\r\n       \r\n      }\r\n    }, 10);\r\n  };\r\n\r\n  stopTimer = () => {\r\n    clearInterval(this.timer);\r\n    this.setState({ timerOn: false });\r\n  };\r\n\r\n\r\n  resetTimer = () => {\r\n        this.setState({\r\n        timerTime: 0,\r\n        timerStart:0,\r\n        timerOn:false,\r\n        exceed:false,\r\n        laps:[]\r\n      });\r\n      clearInterval(this.timer);\r\n      localStorage.setItem('state','');\r\n  \r\n  };\r\n\r\n  \r\n  adjustTimer = input => {\r\n    const { timerTime, timerOn } = this.state;\r\n    if (!timerOn) {\r\n      if (input === \"incHours\" && timerTime + 3600000 < 216000000) {\r\n        this.setState({ timerTime: timerTime + 3600000 });\r\n      } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\r\n        this.setState({ timerTime: timerTime - 3600000 });\r\n      } else if (input === \"incMinutes\" && timerTime + 60000 < 216000000) {\r\n        this.setState({ timerTime: timerTime + 60000 });\r\n      } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\r\n        this.setState({ timerTime: timerTime - 60000 });\r\n      } else if (input === \"incSeconds\" && timerTime + 1000 < 216000000) {\r\n        this.setState({ timerTime: timerTime + 1000 });\r\n      } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\r\n        this.setState({ timerTime: timerTime - 1000 });\r\n      }else if (input === \"incMiSeconds\" && timerTime + 1 < 216000000) {\r\n        this.setState({ timerTime: timerTime + 1 });\r\n      }else if (input === \"decMiSeconds\" && timerTime - 1 >= 0) {\r\n        this.setState({ timerTime: timerTime - 1 });\r\n      }\r\n    }\r\n  };\r\n  \r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.keyPressed);\r\n    if(localStorage.getItem('state'))\r\n    {\r\n      let state=JSON.parse(localStorage.getItem('state'));\r\n      this.setState(state);\r\n    }\r\n  }\r\n\r\n  keyPressed =(e) =>{\r\n    \r\n    if(e.keyCode === 32){\r\n    const { timerTime,laps,timerStart,timerOn } = this.state;\r\n    let timerset= timerTime;\r\n    let lapstate=laps;\r\n    let duration='';\r\n    let starttime='';\r\n    let endtime='';\r\n\r\n    if(lapstate.length>0){\r\n      duration=Math.abs(lapstate[lapstate.length-1].timer-timerTime);\r\n      starttime=Math.abs(lapstate[lapstate.length-1].timer);\r\n      \r\n    }else{\r\n      duration=Math.abs(timerTime-timerStart);\r\n      starttime=Math.abs(timerStart);\r\n    }\r\n    \r\n    if(timerStart !=0 && timerOn === true && timerTime >0){\r\n\r\n    let durationval,startval,endval;\r\n    if(duration){\r\n    let mileseconds = (\"00\" + Math.floor((duration/100 ) *100)).slice(-3);\r\n    let seconds = (\"0\" + (Math.floor((duration / 1000) % 60) % 60)).slice(-2);\r\n    let minutes = (\"0\" + Math.floor((duration / 60000) % 60)).slice(-2);\r\n    let hours = (\"0\" + Math.floor((duration / 3600000) % 60)).slice(-2);\r\n    durationval=`${hours}:${minutes}:${seconds}:${mileseconds}`;\r\n\r\n    }\r\n\r\n    if(starttime){\r\n      let mileseconds = (\"00\" + Math.floor((starttime/100 ) *100)).slice(-3);\r\n      let seconds = (\"0\" + (Math.floor((starttime / 1000) % 60) % 60)).slice(-2);\r\n      let minutes = (\"0\" + Math.floor((starttime / 60000) % 60)).slice(-2);\r\n      let hours = (\"0\" + Math.floor((starttime / 3600000) % 60)).slice(-2);\r\n      startval=`${hours}:${minutes}:${seconds}:${mileseconds}`;\r\n      \r\n      }\r\n\r\n      if(timerTime){\r\n        let mileseconds = (\"00\" + Math.floor((timerTime/100 ) *100)).slice(-3);\r\n        let seconds = (\"0\" + (Math.floor((timerTime / 1000) % 60) % 60)).slice(-2);\r\n        let minutes = (\"0\" + Math.floor((timerTime / 60000) % 60)).slice(-2);\r\n        let hours = (\"0\" + Math.floor((timerTime / 3600000) % 60)).slice(-2);\r\n        endval=`${hours}:${minutes}:${seconds}:${mileseconds}`;\r\n        \r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //let val={'val':`${hours}:${minutes}:${seconds}:${mileseconds}`,timer:timerTime};\r\n    let val={'duartion':durationval,'starttime':startval,'endtime':endval,timer:timerTime};\r\n   \r\n    lapstate.push(val);\r\n      \r\n    this.setState({laps:lapstate});\r\n    }\r\n    }\r\n\r\n    if(e.keyCode === 8){\r\n      const {laps} = this.state;\r\n      let lapstate=laps;\r\n      \r\n      if(lapstate.length >0){\r\n      let mergeval= lapstate[lapstate.length-1].timer;\r\n      lapstate.pop();\r\n       \r\n      this.setState({\r\n        laps:lapstate,\r\n        timerTime:mergeval\r\n      });\r\n    }\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n     \r\n    const { timerTime, timerStart, timerOn ,laps,exceed} = this.state;\r\n\r\n    \r\n    return (\r\n      <div className={exceed ? \"Countdown Exceed\" :\"Countdown\"}  >       \r\n        \r\n        <div className=\"Countdown-label\">Hours : Minutes : Seconds : Msec</div>\r\n        <Timer state={this.state} adjustTimer={this.adjustTimer}/>  \r\n        <div className=\"Actionbtn\">\r\n        {timerOn === false && (timerStart === 0 || timerTime === timerStart) && (\r\n          <button className=\"Button-start\" onClick={this.startTimer} type=\"button\" disabled={!timerTime} for=\"start\">\r\n            Start\r\n          </button>\r\n        )}\r\n        {timerOn === true  && (\r\n            <>\r\n          <button className=\"Button-stop\" onClick={this.stopTimer} for=\"stop\">\r\n            Stop\r\n          </button>\r\n          <button className=\"Button-stop\" onClick={this.stopTimer}>\r\n            Pause\r\n          </button>\r\n\r\n         \r\n        </>\r\n        )}\r\n        {timerOn === false &&\r\n          (timerStart !== 0 && timerStart !== timerTime && timerTime !== 0) && (\r\n            <button className=\"Button-start\" onClick={this.startTimer} for=\"start\">\r\n              Start\r\n            </button>\r\n          )}\r\n\r\n        {(timerOn === false && timerStart !== 0) &&\r\n          (timerStart !== timerTime  ) && (\r\n            <button className=\"Button-reset\" onClick={this.resetTimer}>\r\n              Reset\r\n            </button>\r\n          )}\r\n\r\n        </div>       \r\n        <Laps laps={laps}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Countdown;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Countdown from './components/countdown';\nclass App extends Component {\n  \n  render() { \n    return ( \n      <div className=\"App\" onKeyUp={this.keyPressed}>\n        <div className=\"App-title\">Countdown Timer</div>\n        <div className=\"Timers\">\n           \n          <Countdown />\n        </div>\n      </div>\n     );\n  }\n}\n \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}